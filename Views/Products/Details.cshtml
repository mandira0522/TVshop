@model TvShop.Models.Product

<div class="container product-detail-container my-5">
    <div class="row g-4">
        <!-- Breadcrumb -->
        <nav aria-label="breadcrumb" class="mb-3">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/" class="text-decoration-none">Home</a></li>
                <li class="breadcrumb-item"><a asp-controller="Products" asp-action="Index" class="text-decoration-none">Products</a></li>
                <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
            </ol>
        </nav>

        <!-- Left Section: Main Image & Gallery -->
        <div class="col-lg-6">
            <div class="product-images position-relative">
                <!-- Sale badge -->
                @if (Model.DiscountPercentage.HasValue && Model.DiscountPercentage.Value > 0)
                {
                    <div class="position-absolute top-0 start-0 bg-danger text-white py-2 px-3 m-3 rounded-pill fw-bold shadow-sm z-index-1">
                        <i class="fas fa-tag me-1"></i> @Model.DiscountPercentage.Value.ToString("0")% OFF
                    </div>
                }
                
                <!-- Main image with zoom effect -->
                <div class="main-image-container bg-light rounded-4 shadow-sm overflow-hidden position-relative mb-3" style="height: 400px;">
                    <img id="mainProductImage" src="@(string.IsNullOrEmpty(Model.MainImageUrl) ? "/images/placeholder.jpg" : Model.MainImageUrl)" 
                         alt="@Model.Name" class="w-100 h-100 object-fit-contain p-2" 
                         onerror="this.onerror=null;this.src='/images/placeholder.jpg';" />
                    
                    <!-- Zoom overlay button -->
                    <button type="button" class="btn btn-sm btn-light rounded-circle position-absolute top-0 end-0 m-3" data-bs-toggle="modal" data-bs-target="#imageModal">
                        <i class="fas fa-search-plus"></i>
                    </button>
                </div>
                
                <!-- Thumbnail gallery -->
                <div class="thumbnail-gallery mt-3 d-flex gap-2 overflow-auto py-2">
                    <!-- Main image thumbnail -->
                    <div class="thumbnail-item" onclick="changeMainImage('@(string.IsNullOrEmpty(Model.MainImageUrl) ? "/images/placeholder.jpg" : Model.MainImageUrl)', '@Model.Name')">
                        <img src="@(string.IsNullOrEmpty(Model.MainImageUrl) ? "/images/placeholder.jpg" : Model.MainImageUrl)" 
                             alt="@Model.Name" class="thumbnail rounded shadow-sm border border-primary" 
                             style="width: 80px; height: 80px; object-fit: cover; cursor: pointer;" 
                             onerror="this.onerror=null;this.src='/images/placeholder.jpg';" />
                    </div>
                    
                    <!-- Additional images thumbnails -->
                    @if (Model.ProductImages != null && Model.ProductImages.Any())
                    {
                        @foreach (var image in Model.ProductImages)
                        {
                            <div class="thumbnail-item" onclick="changeMainImage('@image.ImageUrl', '@Model.Name')">
                                <img src="@image.ImageUrl" alt="@Model.Name" 
                                     class="thumbnail rounded shadow-sm border border-light" 
                                     style="width: 80px; height: 80px; object-fit: cover; cursor: pointer;" 
                                     onerror="this.onerror=null;this.src='/images/placeholder.jpg';" />
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <!-- Right Section: Product Info -->
        <div class="col-lg-6">
            <div class="product-info bg-white p-4 rounded-4 shadow-sm h-100">
                <!-- Brand badge -->
                <div class="brand-badge mb-2">
                    <span class="badge bg-light text-dark rounded-pill px-3 py-2 fs-6">@Model.Brand</span>
                    @if (Model.IsNewArrival)
                    {
                        <span class="badge bg-success text-white rounded-pill px-3 py-2 ms-2 fs-6">New Arrival</span>
                    }
                </div>
                
                <!-- Product name -->
                <h1 class="product-title fw-bold mb-3">@Model.Name</h1>
                
                <!-- Star rating -->
                <div class="star-rating mb-3">
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= Math.Floor(Model.AverageRating))
                        {
                            <i class="fas fa-star text-warning"></i>
                        }
                        else if (i - 0.5 <= Model.AverageRating)
                        {
                            <i class="fas fa-star-half-alt text-warning"></i>
                        }
                        else
                        {
                            <i class="far fa-star text-warning"></i>
                        }
                    }
                    <span class="text-muted ms-2">(@Model.AverageRating.ToString("0.0") from @Model.RatingCount @(Model.RatingCount == 1 ? "review" : "reviews"))</span>
                </div>
                
                <!-- Price section -->
                <div class="product-pricing mb-4">
                    @if (Model.DiscountPercentage.HasValue && Model.DiscountPercentage.Value > 0)
                    {
                        <div class="d-flex align-items-center flex-wrap">
                            <h2 class="product-price text-success mb-0">₹@Model.FinalPrice.ToString("N2")</h2>
                            <span class="text-decoration-line-through text-muted ms-3 fs-4">₹@(Model.OldPrice.HasValue ? Model.OldPrice.Value.ToString("N2") : Model.Price.ToString("N2"))</span>
                            <span class="badge bg-danger ms-3 fs-6">@Model.DiscountPercentage.Value.ToString("0")% OFF</span>
                        </div>
                    }
                    else
                    {
                        <h2 class="product-price text-success mb-0">₹@Model.Price.ToString("N2")</h2>
                    }
                    <p class="text-muted mt-1">
                        <i class="fas fa-check-circle text-success me-1"></i> 
                        @(Model.StockQuantity > 0 ? "In Stock" : "Out of Stock")
                        @if (Model.StockQuantity > 0 && Model.StockQuantity < 5)
                        {
                            <span class="text-danger ms-2">Only @Model.StockQuantity left!</span>
                        }
                    </p>
                </div>
                
                <!-- Specifications -->
                <div class="product-specs mb-4">
                    <h5 class="fw-bold mb-3">Specifications</h5>
                    <div class="row g-3">
                        <div class="col-6">
                            <div class="spec-item">
                                <p class="mb-1 text-muted small">Category</p>
                                <p class="fw-bold mb-0">@(string.IsNullOrEmpty(Model.Category) ? "Not specified" : Model.Category)</p>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="spec-item">
                                <p class="mb-1 text-muted small">Size</p>
                                <p class="fw-bold mb-0">@(string.IsNullOrEmpty(Model.Size) ? "Not specified" : Model.Size)</p>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="spec-item">
                                <p class="mb-1 text-muted small">Resolution</p>
                                <p class="fw-bold mb-0">@(string.IsNullOrEmpty(Model.Resolution) ? "Not specified" : Model.Resolution)</p>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="spec-item">
                                <p class="mb-1 text-muted small">Brand</p>
                                <p class="fw-bold mb-0">@Model.Brand</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Description -->
                <div class="product-description mb-4">
                    <h5 class="fw-bold mb-3">Description</h5>
                    <p class="text-muted mb-0">@Model.Description</p>
                </div>
                
                <!-- Actions -->
                <div class="product-actions mt-4">
                    <div class="row g-2">
                        <div class="col-md-6">
                            <form method="post" asp-controller="Order" asp-action="BuyNow" class="d-grid">
                                <input type="hidden" name="productId" value="@Model.Id" />
                                <button type="submit" class="btn btn-lg btn-danger shadow-sm" @(Model.StockQuantity <= 0 ? "disabled" : "")>
                                    <i class="fas fa-bolt me-2"></i> Buy Now
                                </button>
                            </form>
                        </div>
                        <div class="col-md-6">
                            @if (User.Identity.IsAuthenticated)
                            {
                                <form method="post" asp-controller="Cart" asp-action="AddToCart" class="d-grid">
                                    <input type="hidden" name="productId" value="@Model.Id" />
                                    <button type="submit" class="btn btn-lg btn-warning shadow-sm" @(Model.StockQuantity <= 0 ? "disabled" : "")>
                                        <i class="fas fa-cart-plus me-2"></i> Add to Cart
                                    </button>
                                </form>
                            }
                            else
                            {
                                <a asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@($"/Products/Details/{Model.Id}")" class="btn btn-lg btn-outline-primary shadow-sm d-grid">
                                    <i class="fas fa-sign-in-alt me-2"></i> Login to Purchase
                                </a>
                            }
                        </div>
                    </div>
                </div>
                
                <!-- Delivery & Policy -->
                <div class="delivery-info mt-4 pt-4 border-top">
                    <div class="d-flex align-items-center mb-3">
                        <div class="icon-container me-3 text-primary">
                            <i class="fas fa-truck fa-lg"></i>
                        </div>
                        <div>
                            <p class="fw-bold mb-0">Free Delivery</p>
                            <p class="text-muted small mb-0">On orders over ₹20,000</p>
                        </div>
                    </div>
                    <div class="d-flex align-items-center mb-3">
                        <div class="icon-container me-3 text-success">
                            <i class="fas fa-shield-alt fa-lg"></i>
                        </div>
                        <div>
                            <p class="fw-bold mb-0">2 Year Warranty</p>
                            <p class="text-muted small mb-0">Extended protection included</p>
                        </div>
                    </div>
                    <div class="d-flex align-items-center">
                        <div class="icon-container me-3 text-danger">
                            <i class="fas fa-exchange-alt fa-lg"></i>
                        </div>
                        <div>
                            <p class="fw-bold mb-0">Easy Returns</p>
                            <p class="text-muted small mb-0">7-day return policy</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Ratings and Reviews Section -->
<div class="container mt-5">
    <div class="card shadow-sm rounded-4 overflow-hidden">
        <div class="card-header bg-light p-4">
            <h3 class="mb-0"><i class="fas fa-star text-warning me-2"></i> Ratings & Reviews</h3>
        </div>
        <div class="card-body p-4">
            @if (User.Identity.IsAuthenticated)
            {
                <!-- User Rating Form -->
                <div class="rating-form mb-5 p-4 border rounded-3 bg-light">
                    <h4 class="mb-3">Share Your Experience</h4>
                    <form asp-controller="Ratings" asp-action="AddRating" method="post">
                        <input type="hidden" name="productId" value="@Model.Id" />
                        <div class="mb-3">
                            <label class="form-label">Your Rating</label>
                            <div class="star-rating-form">
                                <div class="rating-stars d-flex gap-2 fs-3">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <i class="far fa-star" data-rating="@i" onclick="setRating(@i)"></i>
                                    }
                                </div>
                                <input type="hidden" name="rating" id="ratingValue" value="5" required />
                                <div class="rating-text mt-2" id="ratingText">Select stars to rate</div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="comment" class="form-label">Your Review (Optional)</label>
                            <textarea class="form-control" id="comment" name="comment" rows="3" placeholder="Tell others what you think about this product..."></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-paper-plane me-2"></i> Submit Review
                        </button>
                    </form>
                </div>
            }
            else
            {
                <div class="alert alert-info mb-4" role="alert">
                    <i class="fas fa-info-circle me-2"></i> Please <a asp-area="Identity" asp-page="/Account/Login" class="alert-link">login</a> to leave a review.
                </div>
            }
            
            <!-- Reviews List -->
            <h4 class="mb-3">Customer Reviews</h4>
            
            @if (Model.Ratings != null && Model.Ratings.Any())
            {
                <div class="reviews-container">
                    @foreach (var rating in Model.Ratings.OrderByDescending(r => r.CreatedAt))
                    {
                        <div class="review-item p-3 mb-3 border-bottom">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <div class="d-flex align-items-center">
                                    <img src="@(rating.User.ProfileImageUrl ?? "/images/default-avatar.svg")" alt="User" class="rounded-circle me-2" style="width: 40px; height: 40px; object-fit: cover;">
                                    <div>
                                        <h6 class="mb-0">@rating.User.FullName</h6>
                                        <div class="text-warning">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= rating.Value)
                                                {
                                                    <i class="fas fa-star"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-star"></i>
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                                <span class="text-muted small">@rating.CreatedAt.ToString("MMM d, yyyy")</span>
                            </div>
                            @if (!string.IsNullOrEmpty(rating.Comment))
                            {
                                <p class="mb-1">@rating.Comment</p>
                            }
                            @if (User.Identity.IsAuthenticated && (User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value == rating.UserId || User.IsInRole("Admin")))
                            {
                                <div class="mt-2">
                                    <form asp-controller="Ratings" asp-action="DeleteRating" method="post" onsubmit="return confirm('Are you sure you want to delete this review?');">
                                        <input type="hidden" name="id" value="@rating.Id" />
                                        <input type="hidden" name="productId" value="@Model.Id" />
                                        <button type="submit" class="btn btn-sm btn-outline-danger">
                                            <i class="fas fa-trash-alt me-1"></i> Delete
                                        </button>
                                    </form>
                                </div>
                            }
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-comment-slash fs-1 text-muted mb-3"></i>
                    <p class="mb-0">No reviews yet. Be the first to review this product!</p>
                </div>
            }
        </div>
    </div>
</div>

<!-- Image Zoom Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="imageModalLabel">@Model.Name</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img src="@(string.IsNullOrEmpty(Model.MainImageUrl) ? "/images/placeholder.jpg" : Model.MainImageUrl)" id="zoomedImage" class="img-fluid rounded" alt="@Model.Name" onerror="this.onerror=null;this.src='/images/placeholder.jpg';">
            </div>
        </div>
    </div>
</div>

<!-- JavaScript for image switching -->
<script>
    function changeMainImage(imageUrl, altText) {
        // Update main image
        const mainImage = document.getElementById('mainProductImage');
        mainImage.src = imageUrl;
        mainImage.alt = altText;
        
        // Update zoom modal image
        const zoomedImage = document.getElementById('zoomedImage');
        zoomedImage.src = imageUrl;
        zoomedImage.alt = altText;
        
        // Update thumbnails - highlight active thumbnail
        const thumbnails = document.querySelectorAll('.thumbnail');
        thumbnails.forEach(thumb => {
            if (thumb.src === imageUrl) {
                thumb.classList.add('border-primary');
                thumb.classList.remove('border-light');
            } else {
                thumb.classList.remove('border-primary');
                thumb.classList.add('border-light');
            }
        });
    }
</script>

<!-- Additional styling -->
<style>
    .thumbnail:hover {
        border-color: var(--bs-primary) !important;
        transform: scale(1.05);
        transition: all 0.2s ease;
    }
    
    .product-info {
        height: 100%;
    }
    
    @@media (max-width: 991.98px) {
        .product-info {
            margin-top: 2rem;
        }
    }
    
    /* Rating styles */
    .rating-stars i {
        cursor: pointer;
        transition: all 0.2s ease;
    }
    
    .rating-stars i:hover {
        transform: scale(1.2);
    }
    
    .rating-form {
        background: linear-gradient(to right, #f8f9fa, #ffffff);
        border-left: 4px solid #6a11cb !important;
    }
    
    .review-item {
        transition: all 0.3s ease;
    }
    
    .review-item:hover {
        background-color: #f8f9fa;
    }
</style>

<!-- Rating JavaScript -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize with 5-star rating
        setRating(5);
        
        // Add hover effects to rating stars
        const stars = document.querySelectorAll('.rating-stars i');
        const ratingValue = document.getElementById('ratingValue');
        
        stars.forEach((star) => {
            star.addEventListener('mouseover', () => {
                const rating = parseInt(star.getAttribute('data-rating'));
                updateRatingStars(rating);
                updateRatingText(rating);
            });
            
            star.addEventListener('mouseout', () => {
                const currentRating = parseInt(ratingValue.value);
                updateRatingStars(currentRating);
                updateRatingText(currentRating);
            });
        });
    });
    
    function setRating(rating) {
        document.getElementById('ratingValue').value = rating;
        updateRatingStars(rating);
        updateRatingText(rating);
    }
    
    function updateRatingStars(rating) {
        const stars = document.querySelectorAll('.rating-stars i');
        
        stars.forEach((star, index) => {
            if (index < rating) {
                star.classList.remove('far');
                star.classList.add('fas');
            } else {
                star.classList.remove('fas');
                star.classList.add('far');
            }
        });
    }
    
    function updateRatingText(rating) {
        const ratingText = document.getElementById('ratingText');
        const ratingTexts = [
            'Select stars to rate',
            'Poor',
            'Fair',
            'Good',
            'Very Good',
            'Excellent'
        ];
        
        ratingText.innerText = ratingTexts[rating];
    }
</script>
