@page
@model ResetPasswordModel
@{
    ViewData["Title"] = "Reset Password";
    Layout = "_Layout";
}

<link rel="stylesheet" href="~/css/auth.css" asp-append-version="true" />

<div class="auth-body">
    <div class="auth-container">
        <div class="auth-logo-container">
            <img src="~/uploads/logo/profile.png" alt="Profile" class="auth-logo mb-3 auth-logo-animated">
        </div>
        <h2 class="auth-title">Reset Password</h2>
        <p class="auth-subtitle">Create a new strong password for your account</p>

        <form method="post" class="auth-form-animated">
            <input asp-for="Input.Code" type="hidden" />
            
            @if (!ModelState.IsValid && ModelState.ErrorCount > 0)
            {
                <div class="auth-alert auth-alert-danger">
                    <i class="fas fa-exclamation-circle me-2"></i> Please check the form for errors
                </div>
            }
            
            <div class="auth-form-group">
                <label asp-for="Input.Email" class="auth-label">Email Address</label>
                <div class="auth-input-container">
                    <i class="fas fa-envelope auth-input-icon"></i>
                    <input asp-for="Input.Email" class="auth-input auth-input-with-icon" readonly />
                    <span class="auth-input-focus-effect"></span>
                </div>
            </div>

            <div class="auth-form-group">
                <label asp-for="Input.Password" class="auth-label">New Password</label>
                <div class="auth-input-container">
                    <i class="fas fa-lock auth-input-icon"></i>
                    <input type="password" asp-for="Input.Password" id="password" class="auth-input auth-input-with-icon" placeholder="•••••••••" required />
                    <button type="button" class="password-toggle" id="togglePassword">
                        <i class="far fa-eye"></i>
                    </button>
                    <span class="auth-input-focus-effect"></span>
                </div>
                <span asp-validation-for="Input.Password" class="auth-validation"></span>
                
                <div class="password-strength-meter">
                    <div class="password-strength-progress" id="passwordStrength"></div>
                </div>
                <small class="text-muted" id="passwordFeedback">Password strength</small>
            </div>

            <div class="auth-form-group">
                <label asp-for="Input.ConfirmPassword" class="auth-label">Confirm Password</label>
                <div class="auth-input-container">
                    <i class="fas fa-lock auth-input-icon"></i>
                    <input type="password" asp-for="Input.ConfirmPassword" id="confirmPassword" class="auth-input auth-input-with-icon" placeholder="•••••••••" required />
                    <button type="button" class="password-toggle" id="toggleConfirmPassword">
                        <i class="far fa-eye"></i>
                    </button>
                    <span class="auth-input-focus-effect"></span>
                </div>
                <span asp-validation-for="Input.ConfirmPassword" class="auth-validation"></span>
            </div>

            <div class="auth-alert auth-alert-info">
                <i class="fas fa-shield-alt me-2"></i> Your password should be at least 8 characters and include uppercase, lowercase, numbers, and special characters.
            </div>

            <button type="submit" class="auth-btn auth-btn-animated">
                <span class="auth-btn-content">
                    <i class="fas fa-key me-2"></i>Reset Password
                </span>
            </button>
            
            <div class="auth-footer mt-4">
                <a href="/Identity/Account/Login" class="auth-link">
                    <i class="fas fa-arrow-left me-1"></i> Back to Login
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Add input focus effects
        document.querySelectorAll('.auth-input').forEach(input => {
            input.addEventListener('focus', function() {
                this.parentElement.classList.add('input-focused');
            });
            
            input.addEventListener('blur', function() {
                if (!this.value) {
                    this.parentElement.classList.remove('input-focused');
                }
            });
            
            // Set initial state if input has value
            if (input.value) {
                input.parentElement.classList.add('input-focused');
            }
        });
        
        // Toggle password visibility
        document.getElementById('togglePassword').addEventListener('click', function() {
            const passwordInput = document.getElementById('password');
            const icon = this.querySelector('i');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        });
        
        // Toggle confirm password visibility
        document.getElementById('toggleConfirmPassword').addEventListener('click', function() {
            const passwordInput = document.getElementById('confirmPassword');
            const icon = this.querySelector('i');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                passwordInput.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        });
        
        // Password strength meter
        document.getElementById('password').addEventListener('input', function() {
            const password = this.value;
            const strengthBar = document.getElementById('passwordStrength');
            const feedback = document.getElementById('passwordFeedback');
            
            if (password.length === 0) {
                strengthBar.style.width = '0';
                strengthBar.style.backgroundColor = '';
                feedback.textContent = 'Password strength';
                return;
            }
            
            // Enhanced password strength logic
            let strength = 0;
            
            // Has minimum length
            if (password.length >= 8) strength += 1;
            if (password.length >= 12) strength += 1;
            
            // Has uppercase
            if (/[A-Z]/.test(password)) strength += 1;
            
            // Has lowercase
            if (/[a-z]/.test(password)) strength += 1;
            
            // Has number
            if (/[0-9]/.test(password)) strength += 1;
            
            // Has special char
            if (/[^A-Za-z0-9]/.test(password)) strength += 1;
            
            // Update UI based on strength
            const percentage = (strength / 6) * 100;
            strengthBar.style.width = percentage + '%';
            
            if (strength <= 2) {
                strengthBar.style.backgroundColor = 'var(--danger-color)';
                feedback.textContent = 'Weak password';
                feedback.style.color = 'var(--danger-color)';
            } else if (strength <= 4) {
                strengthBar.style.backgroundColor = 'var(--warning-color)';
                feedback.textContent = 'Medium strength password';
                feedback.style.color = 'var(--warning-color)';
            } else {
                strengthBar.style.backgroundColor = 'var(--success-color)';
                feedback.textContent = 'Strong password';
                feedback.style.color = 'var(--success-color)';
            }
        });
    </script>
}